/**
 * 消息有序：按照 消息的发送顺序 来消费（FIFO）
 * <p>
 * 默认情况下，消息发送是 轮询 方式，把消息发送给不同的 queue（分区队列）；
 * 消费者拉取消息时 从多个 queue 上拉取消息，这时 发送和消费不是 顺序的。
 * <p>
 * 为了保证顺序消费，可以控制 发送消息 到 同一个 queue 中，
 * 此时根据队列的 FIFO 规则，消费必将是 有序的。这种方式 成为 全局有序。
 * <p>
 * 如果多个 queue 参与，则为 分区有序，即相对每个 queue，消息都是有序的。
 * <p>
 * 这里使用 订单的顺序流程 来 实现 分区有序的示例。订单创建流程是：创建、付款、推送、完成。
 * 通过保证 订单号 相同的消息 先后被发送到同一个队列中，那么消费时，同一个 OrderID 的消息肯定来自同一个队列，且有序。
 *
 * @description: 顺序消息 的 发送和接收
 * @author: wei·man cui
 * @date: 2021/3/26 16:20
 */
package com.wang.rocketmq.basic.chapter02;